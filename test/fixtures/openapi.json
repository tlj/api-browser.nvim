{
  "servers": [
    {
      "url": "http://localhost:8080/pets/v1",
      "description": "Development server"
    },
    {
      "url": "https://staging.example.com/pets/stg/v1",
      "description": "Staging server"
    },
    {
      "url": "https://api.example.com/pets/prod/v1",
      "description": "Production server"
    }
  ],
  "paths": {
    "/pets.{_format}": {
      "get": {
        "summary": "List all pets",
        "parameters": [
          {
            "$ref": "#/components/parameters/format"
          }
        ]
      }
    },
    "/cats.{_format}": {
      "get": {
        "summary": "List all cats",
        "parameters": [
          {
            "$ref": "#/components/parameters/format"
          }
        ]
      }
    },
    "/cat/{catId}.{_format}": {
      "get": {
        "summary": "Info for a specific cat",
        "parameters": [
          {
            "name": "catId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/format"
          }
        ]
      }
    },
    "/cat_or_dog/{preferredPet}.{_format}": {
      "get": {
        "summary": "What is your preferred pet?",
        "parameters": [
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "$ref": "#/components/parameters/preferredPet"
          }
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "format": {
        "name": "_format",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "json",
            "xml"
          ]
        }
      },
      "preferredPet": {
        "name": "preferredPet",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "cat",
            "dog"
          ]
        }
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "required": false,
        "description": "The number of items to skip before starting to collect the result set."
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 50,
          "default": 50
        },
        "required": false,
        "description": "The number of items to return."
      }
    }
  }
}
